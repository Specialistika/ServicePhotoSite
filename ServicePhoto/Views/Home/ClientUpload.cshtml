@{
    ViewBag.Title = "Загрузка файлов";
}
<h2>@ViewBag.Title.</h2>


<input type="file" id="uploadFile" multiple="multiple" name="Файл" />
<hr />
<a href="#" id="btnUpload" type="submit" class="btn btn-primary">Загрузить</a>

@*<div class="modal" id="pleaseWaitDiv" role="dialog" style="display:none">
    <div class="modal-dialog" data-backdrop="static" data-keyboard="false">
        <div class="modal-content">
            <h1>Progress...</h1>
            <div class="progress progress-striped active">
                <div class="progress-bar" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%;">
                </div>
            </div>
            <div class="progres progres-striped active">
                <div class="progres-bar" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%;">
                </div>
            </div>
        </div>
    </div>
</div>*@





@section scripts{

    <script>

        //function uploadFile() {
        //    //myApp.showPleaseWait(); //show dialog
        //    //var file = document.getElementById('#uploadFile').files[0];
        //    //var formData = new FormData();
        //    //formData.append("#uploadFile", file);
        //    ajax = new XMLHttpRequest();
        //    ajax.upload.addEventListener("progress", progressHandler, false);
        //    ajax.addEventListener("load", completeHandler, false);
        //    ajax.open("POST", "http://localhost:8170/Home/UploadFile/");
        //    ajax.send(formData);
        //}



        //////////////////////////////////////////
        $(document).ready(function () {

            $('#btnUpload').click(function () {
                UploadFile($('#uploadFile')[0].files);
            }
            )

        });


        //function UploadFileChunk(Chunk, FileName)
        //{
        //    var FD = new FormData();
        //    FD.append('file', Chunk, FileName);
        //    $.ajax({
        //        type: "POST",
        //        url: 'http://localhost:8170/Home/UploadFile/',
        //        contentType: false,
        //        processData: false,
        //        data: FD
        //    });

        //}

        function UploadFileChunk(Chunk, FileName, PartCount) {
            myApp.showPleaseWait(); //show dialog
            var FD = new FormData();
            FD.append('file', Chunk, FileName);
            $.ajax({
                xhr: function () {
                    var xhr = new window.XMLHttpRequest();
                    var next = 0
                    $('.progres').css({
                        width: next * 1 + '%'
                    });
                    xhr.upload.addEventListener("progress", function (evt) {
                        if (evt.lengthComputable) {
                            var percentComplete = evt.loaded / evt.total;
                            console.log(percentComplete);
                            $('.progress').css({
                                width: percentComplete * 100 + '%'
                            });
                            //if (percentComplete === 1) {
                            //    $('.progress').addClass('hide');
                            //}
                        }
                        if (evt.lengthComputable == false) {
                            next++;
                            $('.progres').css({
                                width: next * 1 + '%'
                            });
                        }
                    }, false);

                    xhr.upload.addEventListener("error", function transferFailed(evt)
                    {
                        alert("Error");
                    },false);
                    //xhr.upload.addEventListener("load", function transferComplete(evt)
                    //{
                    //    next++;
                    //    //alert("Load");
                    //    $('.progres').css({
                    //        width: next * 1 + '%'
                    //    });
                    //}, false);

                    //xhr.addEventListener("progress", function (evt) {
                    //    if (evt.lengthComputable) {
                    //        var percentComplete = evt.loaded / evt.total;
                    //        console.log(percentComplete);
                    //        $('.progres').css({
                    //            width: percentComplete * 100 + '%'
                    //        });
                    //    }
                    //}, false);
                    return xhr;
                },
                type: "POST",
                url: 'http://localhost:8170/Home/UploadFile/',
                contentType: false,
                processData: false,
                data: FD,
                success: function (FD) { }
            });
        }

        var myApp;
        myApp = myApp || (function () {
            var pleaseWaitDiv = $('<div class="modal" id="pleaseWaitDiv" role="dialog" style="display:none"><div class="modal-dialog" data-backdrop="static" data-keyboard="false"><div class="modal-content"><h1>Progress...</h1><div class="progress progress-striped active"><div class="progress-bar" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%;"></div></div><div class="progres progres-striped active"><div class="progres-bar" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%;"></div></div></div></div></div>');
            return {
                showPleaseWait: function () {
                    pleaseWaitDiv.modal();
                },
                hidePleaseWait: function () {
                    pleaseWaitDiv.modal('hide');
                },

            };
        })();

        //function progressHandler(event) {
        //    var percent = (event.loaded / event.total) * 100;
        //    $('.bar').width(percent); //from bootstrap bar class
        //}

        //function completeHandler() {
        //    myApp.hidePleaseWait(); //hide dialog
        //    $('.bar').width(100);
        //}


        function UploadFile(TargetFile) {
            // create array to store the buffer chunks
            var FileChunk = [];
            // the file object itself that we will work with
            var file = TargetFile[0];
            // set up other initial vars
            var MaxFileSizeMB = 2;
            var BufferChunkSize = MaxFileSizeMB * (1024 * 1024);
            var ReadBuffer_Size = 2048;
            var FileStreamPos = 0;
            // set the initial chunk length
            var EndPos = BufferChunkSize;
            var Size = file.size;

            // add to the FileChunk array until we get to the end of the file
            while (FileStreamPos < Size) {
                // "slice" the file from the starting position/offset, to  the required length
                FileChunk.push(file.slice(FileStreamPos, EndPos));
                FileStreamPos = EndPos; // jump by the amount read
                EndPos = FileStreamPos + BufferChunkSize; // set next chunk length
            }
            // get total number of "files" we will be sending
            var TotalParts = FileChunk.length;
            var PartCount = 0;
            // loop through, pulling the first item from the array each time and sending it
            while (chunk = FileChunk.shift()) {
                PartCount++;
                var FilePartName = file.name + ".part_" + PartCount + "." + TotalParts;
                // send the file
                UploadFileChunk(chunk, FilePartName, PartCount);
            }
        }


    </script>
}
